import "pkl:json"
import "pkl:yaml"

class Annotations {
  `compose.gateway.org/enabled`: String
  `compose.gateway.org/port`:    String
  `compose.gateway.org/https`:   String = "false"
  `compose.gateway.org/fqdn`:    String
  `compose.gateway.org/path`:    String = "/"
}

type: "cds"|"vhds" = read?("prop:type")
action: "add"|"remove" = read?("prop:action")

config = new yaml.Parser {}
  .parse(read("file:\(read("prop:configFile"))"))

container = read?("prop:container")

annotations = new json.Parser {}
  .parse(read?("prop:annotations") ?? "{}")
  .toTyped(Annotations)

ipAddresses = new json.Parser {}
  .parse(read?("prop:ipAddresses") ?? "[]")

updatedResources: Listing<Dynamic> = new {
  when (type == "cds") {
    new {
      local clusterName = "\(container)-\(annotations.`compose.gateway.org/port`)"
      name = clusterName
      `@type` = "type.googleapis.com/envoy.config.cluster.v3.Cluster"
      type = "STATIC"
      load_assignment {
        cluster_name = clusterName
        endpoints {
          new {
            lb_endpoints {
              for (_ip in ipAddresses) {
                new {
                  endpoint {
                    address {
                      socket_address {
                        address = _ip
                        port_value = annotations.`compose.gateway.org/port`.toInt()
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  when (type == "vhds") {
    new {
      local clusterName = "\(container)-\(annotations.`compose.gateway.org/port`)"
      name = "compose_gateway/\(annotations.`compose.gateway.org/fqdn`.split(",")[0])"
      `@type` = "type.googleapis.com/envoy.config.route.v3.VirtualHost"
      domains = annotations.`compose.gateway.org/fqdn`.split(",").map((it) -> it.trim() + ":80")
      routes {
        new {
          match {
            prefix = annotations.`compose.gateway.org/path`
          }
          route {
            cluster = clusterName
          }
        }
      }
    }
  }
}

vhdsResources: Listing<Dynamic> = new {
  new {
    local clusterName = "\(container)-\(annotations.`compose.gateway.org/port`)"
    name = annotations.`compose.gateway.org/fqdn`
    domains = new {
      annotations.`compose.gateway.org/fqdn`
    }
    routes {
      new {
        match {
          prefix = annotations.`compose.gateway.org/path`
        }
        route {
          cluster = clusterName
        }
      }
    }
  }
}

updatedConfig = new {
  when (action == "add") {
    resources = (
      config.resources.toList() + updatedResources.toList()
    ).distinctBy((it) -> it.name)
  }
}

output {
  value = updatedConfig
  renderer = new YamlRenderer {}
}
